<?xml version="1.0" encoding="utf-8" ?>
<component name="BackgroundTask" extends="Task" >
    <interface>
        <field id="labels" type="assocarray" />  <!-- output -->
    </interface>
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/playlist.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/programs.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/slots.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/time.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/tests.brs" />
<script type = "text/brightscript" >
<![CDATA[

sub init()
#if runTests
    runTheTests()
#endif

    self = m.top
    init_program_list()
    self.functionName = "updateScreenLoop"
    self.control = "RUN"
end sub

sub addWorkToLabels(labels, prefix, heading, work)
    if work = invalid then
        work = {"title":"","performers":"","composer":""}
        heading = ""
    end if
    labels[prefix + "Heading"] = heading
    labels[prefix + "Title"] = work.title
    labels[prefix + "Performers"] = work.performers
    labels[prefix + "Composer"] = work.composer
end sub

sub updateScreenLoop()
    self = m.top
    oneSecond = 1000  ' one second in ms
    oneMinute = 60 * oneSecond

    slots = CreateObject("roArray", 0, true)
    previous = invalid
    while true
        called_get_new_slots = false

        labels = {}

        ' Skip past completed works, leaving slots[0] as the current or next work.
        while slots.Count() > 0 and slots[0].IsCompleted()
            previous = slots.Shift()
        end while

        ' Have we run out of data?
        if slots.Count() = 0 then
            ' no data - need more
            slots = GetNewSlots()
            called_get_new_slots = true

            ' Skip past completed works, leaving slots[0] as the current or next work.
            while slots.Count() > 0 and slots[0].IsCompleted()
                previous = slots.Shift()
            end while
        end if

        currentWork = invalid
        nextWork = invalid

        if slots.Count() = 0 then
            labels["programLabel"] = "Sorry, no information is available."
        else
            if slots[0].HasStarted() then
                currentWork = slots[0]
                if slots.Count() > 1 then nextWork = slots[1]
            else
                nextWork = slots[0]
            end if

            ' Always update the labels, so we can *clear* them if we have no data
            ' rather than just leaving the old data displayed.
            ' addWorkToLabels handles an invalid for the slot
            labels["programLabel"] = current_program_name()
            addWorkToLabels(labels, "justPlayed", "JUST PLAYED", previous)
            addWorkToLabels(labels, "nowPlaying", "NOW PLAYING", currentWork)
            label = "COMING UP"
            if nextWork <> invalid then
                label = "COMING UP AT " + nextWork.FormatStartTimeLocal()
            end if
            addWorkToLabels(labels, "comingUp", label, nextWork)
        end if
        self.labels = labels

        if called_get_new_slots and slots.Count() = 0 then
            ' We tried to get more data and failed somehow. Rather than
            ' hammering the server retrying every second, pause for a longer
            ' time before our next update.
            sleep(2 * oneMinute)
        else
            ' update the screen regularly
            sleep(10 * oneSecond)
        end if
    end while
end sub
]]>
</script>

</component>
