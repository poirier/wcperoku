<?xml version="1.0" encoding="utf-8" ?>
<component name="BackgroundTask" extends="Task" >
    <interface>
        <field id="labels" type="assocarray" />  <!-- output -->
    </interface>
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/playlist.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/slots.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/time.brs" />
    <script type="text/brightscript" uri="pkg:/components/backgroundtask/tests.brs" />
<script type = "text/brightscript" >
<![CDATA[

sub init()
#if runTests
    runTheTests()
#endif

    self = m.top
    self.functionName = "updateScreenLoop"
    self.control = "RUN"
end sub


function formatWork(heading, work) as string
    mstext = ""
    mstext = mstext + "<heading>" + heading + "</heading>" + Chr(10)
    if work.title <> invalid then mstext = mstext + "<title>" + work.title + "</title>" + Chr(10)
    if work.performers <> invalid then mstext = mstext + "<performers>" + work.performers + "</performers>" + Chr(10)
    if work.composer <> invalid then mstext = mstext + "<composer>" + work.composer + "</composer>" + Chr(10)
    return mstext
end function


sub updateScreenLoop()
    self = m.top
    oneSecond = 1000  ' one second in ms
    oneMinute = 60 * oneSecond
    is_dev = CreateObject("roAppInfo").IsDev()

    slots = CreateObject("roArray", 0, true)
    previous = invalid
    while true
        called_get_new_slots = false

        labels = {"timeLabel": mid(getNowLocal().ToISOString(), 12, 8) + " " + tzname()}

        ' Skip past completed works, leaving slots[0] as the current or next work.
        while slots.Count() > 0 and slots[0].IsCompleted()
            previous = slots.Shift()
        end while

        ' Have we run out of data?
        if slots.Count() = 0 then
            ' no data - need more
            result = GetNewSlots()
            slots = result.slots
            previous = result.previous
            called_get_new_slots = true
        end if

        currentWork = invalid
        nextWork = invalid

        if slots.Count() = 0 then
            labels["whatsPlayingLabel"] = "<message>Sorry, no information available.</message>"
        else
            if slots[0].HasStarted() then
                currentWork = slots[0]
                if slots.Count() > 1 then nextWork = slots[1]
            else
                nextWork = slots[0]
            end if

            mstext = ""
            if previous <> invalid then
                mstext = formatWork("JUST PLAYED", previous) + Chr(10)
            endif
            if currentWork <> invalid then
                h = "NOW PLAYING"
                if is_dev then h = h + " (since " + currentWork.FormatStartTimeLocal() + ")"
                mstext = mstext + formatWork(h, currentWork) + Chr(10)
            end if
            if nextWork <> invalid then
                mstext = mstext + formatWork("COMING UP AT " + nextWork.FormatStartTimeLocal(), nextWork)
            end if

            labels["whatsPlayingLabel"] = mstext
        end if
        self.labels = labels

        if called_get_new_slots and slots.Count() = 0 then
            ' We tried to get more data and failed somehow. Rather than
            ' hammering the server retrying every second, pause for a longer
            ' time before our next update.
            sleep(oneMinute)
        else
            ' update the screen every second
            sleep(oneSecond)
        end if
    end while
end sub
]]>
</script>

</component>
